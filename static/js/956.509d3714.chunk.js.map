{"version":3,"file":"static/js/956.509d3714.chunk.js","mappings":"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","sources":["pages/MovieDetail/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./MovieDetail.css\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMovies, removeMovie } from \"../../Store/movieSlice\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\n\r\nconst MovieDetail = () => {\r\n  const [currentMovieDetail, setMovie] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n  const [trending, setTrending] = useState([]);\r\n  const [visibleMovies, setVisibleMovies] = useState(5);\r\n  const [watchListClicked, setWatchListClicked] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [trailerKey, setTrailerKey] = useState(\"\");\r\n  const [showTrailer, setShowTrailer] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const watchListMovies = useSelector((state) => state.movieInfo.watchList);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      let request = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\r\n      );\r\n      let response = await request.json();\r\n      setMovie(response);\r\n      setWatchListClicked(\r\n        watchListMovies.some((movie) => movie.id === response.id)\r\n      );\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n    window.scrollTo(0, 0);\r\n  }, [apiKey, id]);\r\n\r\n  useEffect(() => {\r\n    const fetchTrendingMovies = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}&language=en-US`\r\n      );\r\n      const data = await response.json();\r\n      setTrending(data.results);\r\n    };\r\n\r\n    fetchTrendingMovies();\r\n  }, [apiKey]);\r\n\r\n  useEffect(() => {\r\n    const fetchCrew = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\r\n      );\r\n      const result = await response.json();\r\n      setCast(result.cast);\r\n    };\r\n    fetchCrew();\r\n  }, [apiKey, id]);\r\n\r\n  const setBackDrop = {\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${\r\n      currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"\r\n    })`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    height: \"90%\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n  };\r\n\r\n  let handleWatchList = () => {\r\n    if (!watchListClicked) {\r\n      setWatchListClicked(true);\r\n      if (\r\n        !watchListMovies.some((movie) => movie.id === currentMovieDetail.id)\r\n      ) {\r\n        dispatch(addMovies(currentMovieDetail));\r\n      }\r\n    } else {\r\n      dispatch(removeMovie(currentMovieDetail.id));\r\n      setWatchListClicked(false);\r\n    }\r\n  };\r\n\r\n  const loadMoreMovies = () => {\r\n    setVisibleMovies((prev) => prev + 5);\r\n  };\r\n\r\n  const handleWatchTrailer = async () => {\r\n    if (!currentMovieDetail) return;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.results.length > 0) {\r\n        const trailer = data.results.find(\r\n          (video) => video.type === \"Trailer\" && video.site === \"YouTube\"\r\n        );\r\n\r\n        if (trailer) {\r\n          setTrailerKey(trailer.key);\r\n          setShowTrailer(true);\r\n        } else {\r\n          alert(\"Trailer not available for this movie.\");\r\n        }\r\n      } else {\r\n        alert(\"Trailer not available for this movie.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching trailer:\", error);\r\n      alert(\"Failed to fetch the trailer. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  const closeTrailer = () => {\r\n    setShowTrailer(false);\r\n    setTrailerKey(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <span className=\"back-btn\" onClick={() => navigate(-1)} title=\"Go Back\">\r\n        <i className=\"fa-solid fa-arrow-left\"></i>\r\n      </span>\r\n\r\n      {showTrailer && (\r\n        <div className=\"trailer-modal\">\r\n          <div className=\"modal-content\">\r\n            <span\r\n              className=\"close-btn\"\r\n              style={{ fontSize: \"24px\" }}\r\n              onClick={closeTrailer}\r\n            >\r\n              <i className=\"fa-solid fa-xmark\"></i>\r\n            </span>\r\n            <iframe\r\n              src={`https://www.youtube.com/embed/${trailerKey}`}\r\n              frameborder=\"0\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              title=\"Youtube Trailer\"\r\n              allowFullScreen\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            ></iframe>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"backdrop\" style={{ ...setBackDrop, zIndex: 1 }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n            backdropFilter: \"blur(4px)\",\r\n            zIndex: 1,\r\n          }}\r\n        ></div>\r\n\r\n        {loading ? (\r\n          <div>\r\n            <h1 style={{ fontSize: \"32px\" }}>Loading...</h1>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movie-section\">\r\n            <div className=\"section-left\">\r\n              <div className=\"movie-title\">\r\n                {currentMovieDetail ? currentMovieDetail.original_title : \"\"}\r\n              </div>\r\n              <div className=\"movie-tagline\">\r\n                {currentMovieDetail ? currentMovieDetail.tagline : \"\"}\r\n              </div>\r\n              <div className=\"movie-rating\">\r\n                <span>\r\n                  Rating <i className=\"fa fa-star\"></i> :{\"  \"}\r\n                  {currentMovieDetail ? currentMovieDetail.vote_average : \"\"}\r\n                </span>\r\n                <span>\r\n                  Votes <i className=\"fa fa-thumbs-up\"></i> :{\"  \"}\r\n                  {currentMovieDetail ? currentMovieDetail.vote_count : \"\"}\r\n                </span>\r\n              </div>\r\n              <div className=\"movie-plot\">\r\n                {currentMovieDetail ? currentMovieDetail.overview : \"\"}\r\n              </div>\r\n              <div className=\"movie-info\">\r\n                <div>\r\n                  <span>Status</span>\r\n                  <span>\r\n                    {currentMovieDetail ? currentMovieDetail.status : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span>Runtime</span>\r\n                  <span>\r\n                    {currentMovieDetail\r\n                      ? currentMovieDetail.runtime + \" Mins\"\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span>Released Date</span>\r\n                  <span>\r\n                    {currentMovieDetail ? currentMovieDetail.release_date : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span>Genres</span>\r\n                  {currentMovieDetail\r\n                    ? currentMovieDetail.genres.map(({ name }, i) => (\r\n                        <span key={i}>\r\n                          {name}\r\n                          {i < currentMovieDetail.genres.length - 1\r\n                            ? \", \"\r\n                            : \".\"}\r\n                        </span>\r\n                      ))\r\n                    : \"\"}\r\n                </div>\r\n                <div className=\"production\">\r\n                  <span>Production Companies</span>\r\n                  {currentMovieDetail\r\n                    ? currentMovieDetail.production_companies.length > 0\r\n                      ? currentMovieDetail.production_companies\r\n                          .slice(0, 5)\r\n                          .map(({ name }, i, arr) => (\r\n                            <span key={i}>\r\n                              {name}\r\n                              {i < arr.length - 1 ? \", \" : \".\"}\r\n                            </span>\r\n                          ))\r\n                      : \".\"\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"section-left-2\">\r\n                <div className=\"watch-list\" onClick={handleWatchList}>\r\n                  <div className=\"addBtn\">\r\n                    {watchListClicked ? \"Bookmarked\" : \"Add to Watchlist\"}\r\n                    <span>\r\n                      <i\r\n                        id=\"watch-list\"\r\n                        className={\r\n                          watchListClicked\r\n                            ? \"fa-solid fa-heart\"\r\n                            : \"fa-regular fa-heart\"\r\n                        }\r\n                      ></i>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"watch-trailer\" onClick={handleWatchTrailer}>\r\n                  <div className=\"watchBtn\">\r\n                    Watch Trailer\r\n                    <span>\r\n                      <i id=\"watch-trailer\" className=\"fa-solid fa-play\"></i>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"section-right\">\r\n              <div>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${\r\n                    currentMovieDetail ? currentMovieDetail.poster_path : \"\"\r\n                  }`}\r\n                  alt=\"\"\r\n                  loading=\"lazy\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Movie Cast */}\r\n      <h1 className=\"cast-heading\" style={{ padding: \"20px 10px\" }}>\r\n        Cast\r\n      </h1>\r\n      <div className=\"movie-cast\">\r\n        <div className=\"cast-list\">\r\n          {cast.slice(0, 10).map((cast, i) => {\r\n            return (\r\n              cast.profile_path && (\r\n                <div className=\"cast-details\" key={i + 1}>\r\n                  <img\r\n                    src={\r\n                      cast.profile_path\r\n                        ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\r\n                        : \"https://placehold.co/200x240?text=NA\"\r\n                    }\r\n                    alt={cast.original_name}\r\n                  />\r\n\r\n                  <p>\r\n                    {cast.original_name.length > 15\r\n                      ? cast.original_name.substring(0, 15) + \"...\"\r\n                      : cast.original_name}\r\n                  </p>\r\n                </div>\r\n              )\r\n            );\r\n          })}\r\n\r\n          {cast.length > 10 && (\r\n            <Link to={`/movie/cast/${id}`} className=\"loadmore-div\">\r\n              <button>\r\n                Load More <FaArrowCircleRight size={\"32px\"} />\r\n              </button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Trending Movies */}\r\n      <div className=\"trending_movie_list\">\r\n        <h2 className=\"trending_list_title\">Trending</h2>\r\n        <div className=\"trending_list_cards\">\r\n          {trending.slice(0, visibleMovies).map((movie, i) => (\r\n            <Card key={i} movie={movie} />\r\n          ))}\r\n        </div>\r\n        {visibleMovies < trending.length && (\r\n          <button className=\"trending_load_more_btn\" onClick={loadMoreMovies}>\r\n            Load More\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"],"names":["MovieDetail","currentMovieDetail","setMovie","useState","cast","setCast","trending","setTrending","visibleMovies","setVisibleMovies","watchListClicked","setWatchListClicked","loading","setLoading","trailerKey","setTrailerKey","showTrailer","setShowTrailer","dispatch","useDispatch","watchListMovies","useSelector","state","movieInfo","watchList","navigate","useNavigate","id","useParams","apiKey","process","useEffect","async","request","fetch","concat","response","json","some","movie","fetchData","window","scrollTo","data","results","fetchTrendingMovies","result","fetchCrew","setBackDrop","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","backgroundRepeat","height","width","position","alignItems","color","_jsxs","className","children","_jsx","onClick","title","style","fontSize","closeTrailer","src","frameborder","allowFullScreen","allow","_objectSpread","zIndex","top","left","background","backdropFilter","original_title","tagline","vote_average","vote_count","overview","status","runtime","release_date","genres","map","_ref","i","name","length","production_companies","slice","_ref2","arr","handleWatchList","removeMovie","addMovies","trailer","find","video","type","site","key","alert","error","console","poster_path","alt","padding","profile_path","original_name","substring","Link","to","FaArrowCircleRight","size","Card","loadMoreMovies","prev"],"sourceRoot":""}