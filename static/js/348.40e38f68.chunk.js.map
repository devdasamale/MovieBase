{"version":3,"file":"static/js/348.40e38f68.chunk.js","mappings":"yKAKA,MAiGA,EAjGcA,KACZ,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACzC,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,KACpCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,IACxCS,EAAYC,IAAiBV,EAAAA,EAAAA,UAAS,GACvCW,GAAWC,EAAAA,EAAAA,MACXC,EAASC,oCAEfC,EAAAA,EAAAA,YAAU,KACRhB,EAAe,IACfS,EAAe,GACfF,GAAW,GACXU,OAAOC,SAAS,EAAG,EAAE,GACpB,CAAChB,KAEJc,EAAAA,EAAAA,YAAU,KACeG,WACrB,MAAMC,QAAiBC,MAAM,yDAADC,OAC+BR,EAAM,oBAG3DS,SADaH,EAASI,QACTC,OAAOC,MAAMH,GAAUA,EAAMrB,KAAOyB,SAASzB,KAC5DqB,GACFlB,EAAakB,EAAMK,KACrB,EAEFC,EAAgB,GACf,CAAC3B,EAAIY,KAERE,EAAAA,EAAAA,YAAU,KACYG,WAClB,MAAMC,QAAiBC,MAAM,uDAADC,OAC6BR,EAAM,gCAAAQ,OAA+BpB,EAAE,UAAAoB,OAASd,IAEnGsB,QAAaV,EAASI,OAC5BxB,GAAgB+B,GAAS,IAAIA,KAASD,EAAKE,WAC3CrB,EAAcmB,EAAKG,aACnB1B,GAAW,EAAM,EAEnB2B,EAAa,GACZ,CAACpB,EAAQN,EAAaN,IAQzB,OACEiC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QACEF,UAAU,iBACVG,QAASA,IAAM3B,GAAU,GACzB4B,MAAM,UAASH,UAEfC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,8BAEfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uBAAsBC,SACjCjC,EAAS,GAAAkB,OAAMlB,EAAS,WAAY,eAEtCE,GAA2B,IAAhBE,GACV2B,EAAAA,EAAAA,MAAA,OAAKM,MAAM,cAAaJ,SAAA,EACtBC,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,cAGFA,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClCtC,EAAY2C,KAAI,CAACC,EAAOC,KACvBN,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAASF,MAAOA,GAAVC,QAIjBN,EAAAA,EAAAA,KAAA,UACEF,UAAU,0BACVG,QA3CSO,KACXtC,EAAcE,GAChBD,GAAgBsC,GAASA,EAAO,GAClC,EAyCMC,SAAUxC,GAAeE,EAAW2B,SACrC,mBAIC,C","sources":["components/Genre/Genre.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Genre.css\";\r\n\r\nconst Genre = () => {\r\n  const [genreMovies, setGenreMovies] = useState([]);\r\n  const { id } = useParams();\r\n  const [genreName, setGenreName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const navigate = useNavigate();\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  useEffect(() => {\r\n    setGenreMovies([]);\r\n    setCurrentPage(1);\r\n    setLoading(true);\r\n    window.scrollTo(0, 0);\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchGenreName = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`\r\n      );\r\n      const data = await response.json();\r\n      const genre = data.genres.find((genre) => genre.id === parseInt(id));\r\n      if (genre) {\r\n        setGenreName(genre.name);\r\n      }\r\n    };\r\n    fetchGenreName();\r\n  }, [id, apiKey]);\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&with_genres=${id}&page=${currentPage}`\r\n      );\r\n      const data = await response.json();\r\n      setGenreMovies((prev) => [...prev, ...data.results]);\r\n      setTotalPages(data.total_pages);\r\n      setLoading(false);\r\n    };\r\n    fetchGenres();\r\n  }, [apiKey, currentPage, id]);\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage((next) => next + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-genre-div\">\r\n      <span\r\n        className=\"genre_back-btn\"\r\n        onClick={() => navigate(-1)}\r\n        title=\"Go Back\"\r\n      >\r\n        <i className=\"fa-solid fa-arrow-left\"></i>\r\n      </span>\r\n      <div className=\"genreComp_movie_list\">\r\n        <h2 className=\"genreComp_list_title\">\r\n          {genreName ? `${genreName} Movies` : \"Loading...\"}\r\n        </h2>\r\n        {loading && currentPage === 1 ? (\r\n          <div class=\"lds-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"genreComp_list_cards\">\r\n            {genreMovies.map((movie, i) => (\r\n              <Card key={i} movie={movie} />\r\n            ))}\r\n          </div>\r\n        )}\r\n        <button\r\n          className=\"genreComp_load_more_btn\"\r\n          onClick={nextPage}\r\n          disabled={currentPage >= totalPages}\r\n        >\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n"],"names":["Genre","genreMovies","setGenreMovies","useState","id","useParams","genreName","setGenreName","loading","setLoading","currentPage","setCurrentPage","totalPages","setTotalPages","navigate","useNavigate","apiKey","process","useEffect","window","scrollTo","async","response","fetch","concat","genre","json","genres","find","parseInt","name","fetchGenreName","data","prev","results","total_pages","fetchGenres","_jsxs","className","children","_jsx","onClick","title","class","map","movie","i","Card","nextPage","next","disabled"],"sourceRoot":""}